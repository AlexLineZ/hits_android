package com.example.hits_android.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme

object ThemeColors {
    val LightGreenColors = lightColorScheme(
        primary = md_theme_lightGreen_primary,
        onPrimary = md_theme_lightGreen_onPrimary,
        primaryContainer = md_theme_lightGreen_primaryContainer,
        onPrimaryContainer = md_theme_lightGreen_onPrimaryContainer,
        secondary = md_theme_lightGreen_secondary,
        onSecondary = md_theme_lightGreen_onSecondary,
        secondaryContainer = md_theme_lightGreen_secondaryContainer,
        onSecondaryContainer = md_theme_lightGreen_onSecondaryContainer,
        tertiary = md_theme_lightGreen_tertiary,
        onTertiary = md_theme_lightGreen_onTertiary,
        tertiaryContainer = md_theme_lightGreen_tertiaryContainer,
        onTertiaryContainer = md_theme_lightGreen_onTertiaryContainer,
        error = md_theme_lightGreen_error,
        errorContainer = md_theme_lightGreen_errorContainer,
        onError = md_theme_lightGreen_onError,
        onErrorContainer = md_theme_lightGreen_onErrorContainer,
        background = md_theme_lightGreen_background,
        onBackground = md_theme_lightGreen_onBackground,
        surface = md_theme_lightGreen_surface,
        onSurface = md_theme_lightGreen_onSurface,
        surfaceVariant = md_theme_lightGreen_surfaceVariant,
        onSurfaceVariant = md_theme_lightGreen_onSurfaceVariant,
        outline = md_theme_lightGreen_outline,
        inverseOnSurface = md_theme_lightGreen_inverseOnSurface,
        inverseSurface = md_theme_lightGreen_inverseSurface,
        inversePrimary = md_theme_lightGreen_inversePrimary,
        surfaceTint = md_theme_lightGreen_surfaceTint,
        outlineVariant = md_theme_lightGreen_outlineVariant,
        scrim = md_theme_lightGreen_scrim,
    )


    val DarkGreenColors = darkColorScheme(
        primary = md_theme_darkGreen_primary,
        onPrimary = md_theme_darkGreen_onPrimary,
        primaryContainer = md_theme_darkGreen_primaryContainer,
        onPrimaryContainer = md_theme_darkGreen_onPrimaryContainer,
        secondary = md_theme_darkGreen_secondary,
        onSecondary = md_theme_darkGreen_onSecondary,
        secondaryContainer = md_theme_darkGreen_secondaryContainer,
        onSecondaryContainer = md_theme_darkGreen_onSecondaryContainer,
        tertiary = md_theme_darkGreen_tertiary,
        onTertiary = md_theme_darkGreen_onTertiary,
        tertiaryContainer = md_theme_darkGreen_tertiaryContainer,
        onTertiaryContainer = md_theme_darkGreen_onTertiaryContainer,
        error = md_theme_darkGreen_error,
        errorContainer = md_theme_darkGreen_errorContainer,
        onError = md_theme_darkGreen_onError,
        onErrorContainer = md_theme_darkGreen_onErrorContainer,
        background = md_theme_darkGreen_background,
        onBackground = md_theme_darkGreen_onBackground,
        surface = md_theme_darkGreen_surface,
        onSurface = md_theme_darkGreen_onSurface,
        surfaceVariant = md_theme_darkGreen_surfaceVariant,
        onSurfaceVariant = md_theme_darkGreen_onSurfaceVariant,
        outline = md_theme_darkGreen_outline,
        inverseOnSurface = md_theme_darkGreen_inverseOnSurface,
        inverseSurface = md_theme_darkGreen_inverseSurface,
        inversePrimary = md_theme_darkGreen_inversePrimary,
        surfaceTint = md_theme_darkGreen_surfaceTint,
        outlineVariant = md_theme_darkGreen_outlineVariant,
        scrim = md_theme_darkGreen_scrim,
    )

    val LightPurpleColors = lightColorScheme(
        primary = md_theme_lightPurple_primary,
        onPrimary = md_theme_lightPurple_onPrimary,
        primaryContainer = md_theme_lightPurple_primaryContainer,
        onPrimaryContainer = md_theme_lightPurple_onPrimaryContainer,
        secondary = md_theme_lightPurple_secondary,
        onSecondary = md_theme_lightPurple_onSecondary,
        secondaryContainer = md_theme_lightPurple_secondaryContainer,
        onSecondaryContainer = md_theme_lightPurple_onSecondaryContainer,
        tertiary = md_theme_lightPurple_tertiary,
        onTertiary = md_theme_lightPurple_onTertiary,
        tertiaryContainer = md_theme_lightPurple_tertiaryContainer,
        onTertiaryContainer = md_theme_lightPurple_onTertiaryContainer,
        error = md_theme_lightPurple_error,
        errorContainer = md_theme_lightPurple_errorContainer,
        onError = md_theme_lightPurple_onError,
        onErrorContainer = md_theme_lightPurple_onErrorContainer,
        background = md_theme_lightPurple_background,
        onBackground = md_theme_lightPurple_onBackground,
        surface = md_theme_lightPurple_surface,
        onSurface = md_theme_lightPurple_onSurface,
        surfaceVariant = md_theme_lightPurple_surfaceVariant,
        onSurfaceVariant = md_theme_lightPurple_onSurfaceVariant,
        outline = md_theme_lightPurple_outline,
        inverseOnSurface = md_theme_lightPurple_inverseOnSurface,
        inverseSurface = md_theme_lightPurple_inverseSurface,
        inversePrimary = md_theme_lightPurple_inversePrimary,
        surfaceTint = md_theme_lightPurple_surfaceTint,
        outlineVariant = md_theme_lightPurple_outlineVariant,
        scrim = md_theme_lightPurple_scrim,
    )


    val DarkPurpleColors = darkColorScheme(
        primary = md_theme_darkPurple_primary,
        onPrimary = md_theme_darkPurple_onPrimary,
        primaryContainer = md_theme_darkPurple_primaryContainer,
        onPrimaryContainer = md_theme_darkPurple_onPrimaryContainer,
        secondary = md_theme_darkPurple_secondary,
        onSecondary = md_theme_darkPurple_onSecondary,
        secondaryContainer = md_theme_darkPurple_secondaryContainer,
        onSecondaryContainer = md_theme_darkPurple_onSecondaryContainer,
        tertiary = md_theme_darkPurple_tertiary,
        onTertiary = md_theme_darkPurple_onTertiary,
        tertiaryContainer = md_theme_darkPurple_tertiaryContainer,
        onTertiaryContainer = md_theme_darkPurple_onTertiaryContainer,
        error = md_theme_darkPurple_error,
        errorContainer = md_theme_darkPurple_errorContainer,
        onError = md_theme_darkPurple_onError,
        onErrorContainer = md_theme_darkPurple_onErrorContainer,
        background = md_theme_darkPurple_background,
        onBackground = md_theme_darkPurple_onBackground,
        surface = md_theme_darkPurple_surface,
        onSurface = md_theme_darkPurple_onSurface,
        surfaceVariant = md_theme_darkPurple_surfaceVariant,
        onSurfaceVariant = md_theme_darkPurple_onSurfaceVariant,
        outline = md_theme_darkPurple_outline,
        inverseOnSurface = md_theme_darkPurple_inverseOnSurface,
        inverseSurface = md_theme_darkPurple_inverseSurface,
        inversePrimary = md_theme_darkPurple_inversePrimary,
        surfaceTint = md_theme_darkPurple_surfaceTint,
        outlineVariant = md_theme_darkPurple_outlineVariant,
        scrim = md_theme_darkPurple_scrim,
    )


    val LightPinkColors = lightColorScheme(
        primary = md_theme_lightPink_primary,
        onPrimary = md_theme_lightPink_onPrimary,
        primaryContainer = md_theme_lightPink_primaryContainer,
        onPrimaryContainer = md_theme_lightPink_onPrimaryContainer,
        secondary = md_theme_lightPink_secondary,
        onSecondary = md_theme_lightPink_onSecondary,
        secondaryContainer = md_theme_lightPink_secondaryContainer,
        onSecondaryContainer = md_theme_lightPink_onSecondaryContainer,
        tertiary = md_theme_lightPink_tertiary,
        onTertiary = md_theme_lightPink_onTertiary,
        tertiaryContainer = md_theme_lightPink_tertiaryContainer,
        onTertiaryContainer = md_theme_lightPink_onTertiaryContainer,
        error = md_theme_lightPink_error,
        errorContainer = md_theme_lightPink_errorContainer,
        onError = md_theme_lightPink_onError,
        onErrorContainer = md_theme_lightPink_onErrorContainer,
        background = md_theme_lightPink_background,
        onBackground = md_theme_lightPink_onBackground,
        surface = md_theme_lightPink_surface,
        onSurface = md_theme_lightPink_onSurface,
        surfaceVariant = md_theme_lightPink_surfaceVariant,
        onSurfaceVariant = md_theme_lightPink_onSurfaceVariant,
        outline = md_theme_lightPink_outline,
        inverseOnSurface = md_theme_lightPink_inverseOnSurface,
        inverseSurface = md_theme_lightPink_inverseSurface,
        inversePrimary = md_theme_lightPink_inversePrimary,
        surfaceTint = md_theme_lightPink_surfaceTint,
        outlineVariant = md_theme_lightPink_outlineVariant,
        scrim = md_theme_lightPink_scrim,
    )


    val DarkPinkColors = darkColorScheme(
        primary = md_theme_darkPink_primary,
        onPrimary = md_theme_darkPink_onPrimary,
        primaryContainer = md_theme_darkPink_primaryContainer,
        onPrimaryContainer = md_theme_darkPink_onPrimaryContainer,
        secondary = md_theme_darkPink_secondary,
        onSecondary = md_theme_darkPink_onSecondary,
        secondaryContainer = md_theme_darkPink_secondaryContainer,
        onSecondaryContainer = md_theme_darkPink_onSecondaryContainer,
        tertiary = md_theme_darkPink_tertiary,
        onTertiary = md_theme_darkPink_onTertiary,
        tertiaryContainer = md_theme_darkPink_tertiaryContainer,
        onTertiaryContainer = md_theme_darkPink_onTertiaryContainer,
        error = md_theme_darkPink_error,
        errorContainer = md_theme_darkPink_errorContainer,
        onError = md_theme_darkPink_onError,
        onErrorContainer = md_theme_darkPink_onErrorContainer,
        background = md_theme_darkPink_background,
        onBackground = md_theme_darkPink_onBackground,
        surface = md_theme_darkPink_surface,
        onSurface = md_theme_darkPink_onSurface,
        surfaceVariant = md_theme_darkPink_surfaceVariant,
        onSurfaceVariant = md_theme_darkPink_onSurfaceVariant,
        outline = md_theme_darkPink_outline,
        inverseOnSurface = md_theme_darkPink_inverseOnSurface,
        inverseSurface = md_theme_darkPink_inverseSurface,
        inversePrimary = md_theme_darkPink_inversePrimary,
        surfaceTint = md_theme_darkPink_surfaceTint,
        outlineVariant = md_theme_darkPink_outlineVariant,
        scrim = md_theme_darkPink_scrim,
    )


    val LightBlueColors = lightColorScheme(
        primary = md_theme_lightBlue_primary,
        onPrimary = md_theme_lightBlue_onPrimary,
        primaryContainer = md_theme_lightBlue_primaryContainer,
        onPrimaryContainer = md_theme_lightBlue_onPrimaryContainer,
        secondary = md_theme_lightBlue_secondary,
        onSecondary = md_theme_lightBlue_onSecondary,
        secondaryContainer = md_theme_lightBlue_secondaryContainer,
        onSecondaryContainer = md_theme_lightBlue_onSecondaryContainer,
        tertiary = md_theme_lightBlue_tertiary,
        onTertiary = md_theme_lightBlue_onTertiary,
        tertiaryContainer = md_theme_lightBlue_tertiaryContainer,
        onTertiaryContainer = md_theme_lightBlue_onTertiaryContainer,
        error = md_theme_lightBlue_error,
        errorContainer = md_theme_lightBlue_errorContainer,
        onError = md_theme_lightBlue_onError,
        onErrorContainer = md_theme_lightBlue_onErrorContainer,
        background = md_theme_lightBlue_background,
        onBackground = md_theme_lightBlue_onBackground,
        surface = md_theme_lightBlue_surface,
        onSurface = md_theme_lightBlue_onSurface,
        surfaceVariant = md_theme_lightBlue_surfaceVariant,
        onSurfaceVariant = md_theme_lightBlue_onSurfaceVariant,
        outline = md_theme_lightBlue_outline,
        inverseOnSurface = md_theme_lightBlue_inverseOnSurface,
        inverseSurface = md_theme_lightBlue_inverseSurface,
        inversePrimary = md_theme_lightBlue_inversePrimary,
        surfaceTint = md_theme_lightBlue_surfaceTint,
        outlineVariant = md_theme_lightBlue_outlineVariant,
        scrim = md_theme_lightBlue_scrim,
    )


    val DarkBlueColors = darkColorScheme(
        primary = md_theme_darkBlue_primary,
        onPrimary = md_theme_darkBlue_onPrimary,
        primaryContainer = md_theme_darkBlue_primaryContainer,
        onPrimaryContainer = md_theme_darkBlue_onPrimaryContainer,
        secondary = md_theme_darkBlue_secondary,
        onSecondary = md_theme_darkBlue_onSecondary,
        secondaryContainer = md_theme_darkBlue_secondaryContainer,
        onSecondaryContainer = md_theme_darkBlue_onSecondaryContainer,
        tertiary = md_theme_darkBlue_tertiary,
        onTertiary = md_theme_darkBlue_onTertiary,
        tertiaryContainer = md_theme_darkBlue_tertiaryContainer,
        onTertiaryContainer = md_theme_darkBlue_onTertiaryContainer,
        error = md_theme_darkBlue_error,
        errorContainer = md_theme_darkBlue_errorContainer,
        onError = md_theme_darkBlue_onError,
        onErrorContainer = md_theme_darkBlue_onErrorContainer,
        background = md_theme_darkBlue_background,
        onBackground = md_theme_darkBlue_onBackground,
        surface = md_theme_darkBlue_surface,
        onSurface = md_theme_darkBlue_onSurface,
        surfaceVariant = md_theme_darkBlue_surfaceVariant,
        onSurfaceVariant = md_theme_darkBlue_onSurfaceVariant,
        outline = md_theme_darkBlue_outline,
        inverseOnSurface = md_theme_darkBlue_inverseOnSurface,
        inverseSurface = md_theme_darkBlue_inverseSurface,
        inversePrimary = md_theme_darkBlue_inversePrimary,
        surfaceTint = md_theme_darkBlue_surfaceTint,
        outlineVariant = md_theme_darkBlue_outlineVariant,
        scrim = md_theme_darkBlue_scrim,
    )


    val LightRedColors = lightColorScheme(
        primary = md_theme_lightRed_primary,
        onPrimary = md_theme_lightRed_onPrimary,
        primaryContainer = md_theme_lightRed_primaryContainer,
        onPrimaryContainer = md_theme_lightRed_onPrimaryContainer,
        secondary = md_theme_lightRed_secondary,
        onSecondary = md_theme_lightRed_onSecondary,
        secondaryContainer = md_theme_lightRed_secondaryContainer,
        onSecondaryContainer = md_theme_lightRed_onSecondaryContainer,
        tertiary = md_theme_lightRed_tertiary,
        onTertiary = md_theme_lightRed_onTertiary,
        tertiaryContainer = md_theme_lightRed_tertiaryContainer,
        onTertiaryContainer = md_theme_lightRed_onTertiaryContainer,
        error = md_theme_lightRed_error,
        errorContainer = md_theme_lightRed_errorContainer,
        onError = md_theme_lightRed_onError,
        onErrorContainer = md_theme_lightRed_onErrorContainer,
        background = md_theme_lightRed_background,
        onBackground = md_theme_lightRed_onBackground,
        outline = md_theme_lightRed_outline,
        inverseOnSurface = md_theme_lightRed_inverseOnSurface,
        inverseSurface = md_theme_lightRed_inverseSurface,
        inversePrimary = md_theme_lightRed_inversePrimary,
        surfaceTint = md_theme_lightRed_surfaceTint,
        outlineVariant = md_theme_lightRed_outlineVariant,
        scrim = md_theme_lightRed_scrim,
        surface = md_theme_lightRed_surface,
        onSurface = md_theme_lightRed_onSurface,
        surfaceVariant = md_theme_lightRed_surfaceVariant,
        onSurfaceVariant = md_theme_lightRed_onSurfaceVariant,
    )


    val DarkRedColors = darkColorScheme(
        primary = md_theme_darkRed_primary,
        onPrimary = md_theme_darkRed_onPrimary,
        primaryContainer = md_theme_darkRed_primaryContainer,
        onPrimaryContainer = md_theme_darkRed_onPrimaryContainer,
        secondary = md_theme_darkRed_secondary,
        onSecondary = md_theme_darkRed_onSecondary,
        secondaryContainer = md_theme_darkRed_secondaryContainer,
        onSecondaryContainer = md_theme_darkRed_onSecondaryContainer,
        tertiary = md_theme_darkRed_tertiary,
        onTertiary = md_theme_darkRed_onTertiary,
        tertiaryContainer = md_theme_darkRed_tertiaryContainer,
        onTertiaryContainer = md_theme_darkRed_onTertiaryContainer,
        error = md_theme_darkRed_error,
        errorContainer = md_theme_darkRed_errorContainer,
        onError = md_theme_darkRed_onError,
        onErrorContainer = md_theme_darkRed_onErrorContainer,
        background = md_theme_darkRed_background,
        onBackground = md_theme_darkRed_onBackground,
        outline = md_theme_darkRed_outline,
        inverseOnSurface = md_theme_darkRed_inverseOnSurface,
        inverseSurface = md_theme_darkRed_inverseSurface,
        inversePrimary = md_theme_darkRed_inversePrimary,
        surfaceTint = md_theme_darkRed_surfaceTint,
        outlineVariant = md_theme_darkRed_outlineVariant,
        scrim = md_theme_darkRed_scrim,
        surface = md_theme_darkRed_surface,
        onSurface = md_theme_darkRed_onSurface,
        surfaceVariant = md_theme_darkRed_surfaceVariant,
        onSurfaceVariant = md_theme_darkRed_onSurfaceVariant,
    )


    val LightYellowColors = lightColorScheme(
        primary = md_theme_lightYellow_primary,
        onPrimary = md_theme_lightYellow_onPrimary,
        primaryContainer = md_theme_lightYellow_primaryContainer,
        onPrimaryContainer = md_theme_lightYellow_onPrimaryContainer,
        secondary = md_theme_lightYellow_secondary,
        onSecondary = md_theme_lightYellow_onSecondary,
        secondaryContainer = md_theme_lightYellow_secondaryContainer,
        onSecondaryContainer = md_theme_lightYellow_onSecondaryContainer,
        tertiary = md_theme_lightYellow_tertiary,
        onTertiary = md_theme_lightYellow_onTertiary,
        tertiaryContainer = md_theme_lightYellow_tertiaryContainer,
        onTertiaryContainer = md_theme_lightYellow_onTertiaryContainer,
        error = md_theme_lightYellow_error,
        errorContainer = md_theme_lightYellow_errorContainer,
        onError = md_theme_lightYellow_onError,
        onErrorContainer = md_theme_lightYellow_onErrorContainer,
        background = md_theme_lightYellow_background,
        onBackground = md_theme_lightYellow_onBackground,
        outline = md_theme_lightYellow_outline,
        inverseOnSurface = md_theme_lightYellow_inverseOnSurface,
        inverseSurface = md_theme_lightYellow_inverseSurface,
        inversePrimary = md_theme_lightYellow_inversePrimary,
        surfaceTint = md_theme_lightYellow_surfaceTint,
        outlineVariant = md_theme_lightYellow_outlineVariant,
        scrim = md_theme_lightYellow_scrim,
        surface = md_theme_lightYellow_surface,
        onSurface = md_theme_lightYellow_onSurface,
        surfaceVariant = md_theme_lightYellow_surfaceVariant,
        onSurfaceVariant = md_theme_lightYellow_onSurfaceVariant,
    )


    val DarkYellowColors = darkColorScheme(
        primary = md_theme_darkYellow_primary,
        onPrimary = md_theme_darkYellow_onPrimary,
        primaryContainer = md_theme_darkYellow_primaryContainer,
        onPrimaryContainer = md_theme_darkYellow_onPrimaryContainer,
        secondary = md_theme_darkYellow_secondary,
        onSecondary = md_theme_darkYellow_onSecondary,
        secondaryContainer = md_theme_darkYellow_secondaryContainer,
        onSecondaryContainer = md_theme_darkYellow_onSecondaryContainer,
        tertiary = md_theme_darkYellow_tertiary,
        onTertiary = md_theme_darkYellow_onTertiary,
        tertiaryContainer = md_theme_darkYellow_tertiaryContainer,
        onTertiaryContainer = md_theme_darkYellow_onTertiaryContainer,
        error = md_theme_darkYellow_error,
        errorContainer = md_theme_darkYellow_errorContainer,
        onError = md_theme_darkYellow_onError,
        onErrorContainer = md_theme_darkYellow_onErrorContainer,
        background = md_theme_darkYellow_background,
        onBackground = md_theme_darkYellow_onBackground,
        outline = md_theme_darkYellow_outline,
        inverseOnSurface = md_theme_darkYellow_inverseOnSurface,
        inverseSurface = md_theme_darkYellow_inverseSurface,
        inversePrimary = md_theme_darkYellow_inversePrimary,
        surfaceTint = md_theme_darkYellow_surfaceTint,
        outlineVariant = md_theme_darkYellow_outlineVariant,
        scrim = md_theme_darkYellow_scrim,
        surface = md_theme_darkYellow_surface,
        onSurface = md_theme_darkYellow_onSurface,
        surfaceVariant = md_theme_darkYellow_surfaceVariant,
        onSurfaceVariant = md_theme_darkYellow_onSurfaceVariant,
    )
}